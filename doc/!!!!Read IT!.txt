1. Надо чтобы можно было легко привязывать что-то к чему-то. Вот, рассмотрим такой пример. Пусть у нас есть система частиц. Я хочу, чтобы можно было легко привязывать к визуализации частиц то, что ты хочешь. Значит надо сделать что-то, чтобы можно было передавать систему частиц то, как мы хотим рендерить каждую отдельную частицу и при этом позволить этому чему-то получать доступ к вызывающей системе частиц. Первое, что приходит мне на ум – это callback функция. Что-то вроде RenderSingleParticle(const Vector2 &p, const CParticleSystem &ps); Второе, что приходит на ум – позволить передавать системе частиц наследника класса CRenderObject. Но тогда как передавать в рендер-функцию этого класса систему частиц?! Наверное я сделаю у CRenderObject виртуальную функцию RenderBySpecificList(Vector2 p, CObjectList)
2. Нужно убедиться, что всё, что можно загрузить из файла действительно является наследником CResource. Сделать, чтобы все кучи параметров, которые очевидно не куча байт, которые надо хранить в бинарнике, загружались из XML.  
3. Следует обратить на такие концепции как scene graph, controller, hierarchy, modifers