This is first piece:

A place to write the requirements. 
A place to write an overview of how objects/functions/data interact. 
A place to specify coding conventions such as variable naming and commenting. 
A place to list all the technologies the game uses, and how the game benefits from them. 
A place to list all the classes/structures/variables, and what they are to contain. 
A place to list all the functions/routines and what they are to do. 
A place to list in what order modules will be written. 
A place to list file types, data layout, etc. 
A place to give considerations to future additions, and "what if"s. 
A place to list projected system requirements and dependencies.


And here goes second:

Технический документ

Требования предъявляемые разработчкиками движка к своему детищу: 
	Во-первых, движок должен обеспечивать работу без тормозов на моём (mapholameth) ноутбуке (Intel celeron 2400 Mhz; 256 Mb RAM; SIS 650 integrated VGA)
	Движок должен поддерживать игру по сети, а также не должен препятствовать возможности игры в двоём в пределах одного компьютера. (тут я имел в виду split screen)
	Поддержка тайлсетов. // что под этим понимается?
	Карты можно составлять как из тайлсетов, так и просто кидать Entity на карту.  // Кривовато и маловато. И требование ли это? Скорее описание принципа работы редактора карт.
	Возможность создавать разные игры без перекомпиляции движка. Перекомпиляция нужна только для ввода поддержки в движок принципиально новых возможностей.
	Движок позволяет создавать двухмерные игры. Это значит, что в движке нет поддержки хардварной отрисовки трехмерной графики, но это не значит что какой-нибудь извращенец не сможет написать на этом движке свой трёхмерный программный рендер. Под двухмерными играми понимается <...>
	Продвинутая система частиц.	// И...? Что это?
	Attach/detach concept (?)  // А это что?
	Timeline concept (?)	// Это?

Обзор дизайна: 

// TOFILL

Drawing: 
	В своей основе вся отрисовка состоит из двух компонентов. Рисование линий и рисование картинок.

Input: 
	Основной ввод - с клавиатуры. Мышь поддерживается, джойстик^W геймпад поддерживается.


Logic: 

Структура дирректорий и логика использования проекта: 

Код движка отделяется от кода, который его использует. Движок - это отдельный проект, который компилируется в статическую библиотеку.
Структура дирректорий репозитория:

+---Data	// Общая папка с данными, которые используются всеми проектами сразу.
¦   +---Fonts	// Из названия папки следует, что в ней лежит. Название подпапки в папке Data должно начинаться с верхнего регистра, если слов более одного, то все остальные слова имеют нижний регистр букв.
¦   +---Levels
¦   +---Music
¦   +---Scripts
¦   +---Sounds
¦   +---Textures
¦   L---Tilesets
+---Demos	// Демонстрационные проекты, необходимые для отладки и тестирования движка. По подпапке на проект. Именование подпапок аналогично тому, что выше.
¦   +---Project name	// Имя папки отражает имя проекта. В пределах каждого проекта - стандартная структура дирректорий проекта. bin/ для исполняемых файлов. inc/ для заголовочных файлов, относящихся непосредственно к данному проекту, src/ для .cpp/.c файлов. Файлы проекта т.е. .vcproj и Makefile кладутся в корень проекта. Каждый проект использует общую папку Data/ путь к ней прописывается в конфигурационном файле проекта.
¦   ¦   +---bin
¦   ¦   ¦   +---Config
¦   ¦   ¦   L---Logs
¦   ¦   +---inc
¦   ¦   +---res
¦   ¦   L---src
+---Engine	// Непосредственно дирректория движка. doc/ различная небольшая документация, предназначенная в основном для разработчиков движка. inc/ Заголовочные файлы движка, плюс заголовочные файлы нестандартных, а также модифицированных библиотек. lib/ - аналогично с inc/, но .lib файлы. src - исходный код движка (.cpp/.c)
¦   +---doc
¦   ¦   L---Schemes
¦   +---inc
¦   ¦   +---dirent
¦   ¦   +---gl
¦   ¦   +---libtomcrypt
¦   ¦   L---tnl
¦   +---lib
¦   L---src
Ещё в корне репозиторя лежит общий Makefile и .sln файл.

Предполагается, что конечный пользователь будет иметь в своём распоряжении хидеры движка и .lib файл. Он будет подключать их к своему проекту по своему усмотрению. Поскольку deku2D - open source движок, то исходный код конечный пользователь, естественно, будет в состоянии достать.
